worker_processes  1;

events {
    worker_connections  1024;
}

http {
    # Extract user ID from /api/users/{userid}
    map $request_uri $user_id {
        default "";
        "~^/api/users/(?<captured_id>[a-f0-9\\-]{36})$" $captured_id;      # UUIDs
        "~^/api/users/(?<captured_id>[a-f0-9\\-]{36})/" $captured_id;       # UUIDs with trailing slash
        "~^/api/users/(?<captured_id>[^/?]+)$" $captured_id;                # Fallback
        "~^/api/users/(?<captured_id>[^/?]+)/" $captured_id;                # Fallback with slash
    }

    # Extract hotel_id from /api/hotels/{hotelid}
    map $request_uri $hotel_id {
        default "";
        "~^/api/hotels/(?<captured_id>[a-f0-9\\-]{36})$" $captured_id;
        "~^/api/hotels/(?<captured_id>[a-f0-9\\-]{36})/" $captured_id;
        "~^/api/hotels/(?<captured_id>[^/?]+)$" $captured_id;
        "~^/api/hotels/(?<captured_id>[^/?]+)/" $captured_id;
    }

    # Extract rating_id from /api/ratings/{ratingid}
    map $request_uri $rating_id {
        default "";
        "~^/api/ratings/(?<captured_id>[a-f0-9]{24})$" $captured_id;        # MongoDB IDs
        "~^/api/ratings/(?<captured_id>[a-f0-9]{24})/" $captured_id;
        "~^/api/ratings/(?<captured_id>[^/?]+)$" $captured_id;
        "~^/api/ratings/(?<captured_id>[^/?]+)/" $captured_id;
    }

    # Custom log format
    log_format custom '$remote_addr - $remote_user [$time_local] '
                      '"$request" $status $body_bytes_sent '
                      '"$http_referer" "$http_user_agent" '
                      '"userid:$user_id" "hotelid:$hotel_id" "ratingid:$rating_id"';




    upstream hotel_service { server localhost:8082; }
    upstream user_service { server localhost:8081; }
    upstream rating_service { server localhost:8084; }

    server {
        listen 8080;
        server_name localhost;
         # ACTIVATE CUSTOM LOGGING (CRITICAL ADDITION)
        access_log logs/access.log custom;

        # Unified Hotel Service Routes
        location ~ ^/api/hotels(/|$) {
            proxy_pass http://hotel_service;
            proxy_http_version 1.1;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
        }
	location = /api/hotels {
    	    proxy_pass http://hotel_service;
    	    proxy_http_version 1.1;
    	    proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
	}


        # Unified User Service Routes
        location ~ ^/api/users(/|$) {
            proxy_pass http://user_service;
            proxy_http_version 1.1;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
        }

        # Unified Rating Service Routes
        location ~ ^/api/ratings(/|$) {
            proxy_pass http://rating_service;
            proxy_http_version 1.1;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
        }
    }
}
